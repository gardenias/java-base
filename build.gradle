task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
    distributionUrl = 'http://services.gradle.org/distributions/gradle-2.1-bin.zip'
}

List logDependencies = ['org.slf4j:slf4j-api:1.7.5', 'ch.qos.logback:logback-access:1.0.13', 'ch.qos.logback:logback-classic:1.0.13', 'ch.qos.logback:logback-core:1.0.13']
List testDependencies = ['junit:junit:4.11']

subprojects {
    apply plugin: 'java'
    /**
     * The JaCoCo plugin provides code coverage metrics for Java code via integration with JaCoCo.
     */
    apply plugin: 'jacoco'
    /*
    * The CodeNarc plugin performs quality checks on your project's Groovy source files using CodeNarc and
    * generates reports from these checks
     */
    //apply plugin: 'codenarc'
    /**
     * The PMD plugin performs quality checks on your project's Java source files using and PMD generates reports
     * from these checks.
     */
    apply plugin: 'pmd'
    apply plugin: 'project-report'
    /**
     * The Build Dashboard plugin can be used to generate a single HTML dashboard that provides a single point of
     * access to all of the reports generated by a build.
     */
    apply plugin: 'build-dashboard'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    version = '1.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile 'org.projectlombok:lombok:1.16.2'
        compile 'com.google.guava:guava:18.0'

        compile logDependencies
        testCompile testDependencies
    }

    jacoco {
        toolVersion = "0.7.0.201403182114"
        reportsDir = file("$buildDir/customJacocoReportDir")
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination "${buildDir}/jacocoHtml"
        }
    }

    /*tasks.withType(:compile) {
        options.encoding = 'UTF-8'
    }*/

    task listDependencies << {
        configurations.compile.each { File file -> println file.name }
    }
}